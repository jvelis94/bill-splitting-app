{"ast":null,"code":"var _jsxFileName = \"/Users/jvelis/code/jvelis94/bill-splitter/src/components/GroupBill.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport PersonalBill from \"./PersonalBill\"; // import styles from \"./GroupBill.module.css\"\n\nimport SimpleTabs from \"./Tabs\";\nimport styles from './IndividualItem.module.css';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = [{\n  id: 1,\n  name: \"Joel\",\n  items: [],\n  subtotal: 0,\n  tax: 0,\n  tip: 0,\n  total: 0\n}, {\n  id: 2,\n  name: \"Nohely\",\n  items: [],\n  subtotal: 0,\n  tax: 0,\n  tip: 0,\n  total: 0\n}];\n\nconst GroupBill = () => {\n  _s();\n\n  const [people, setPeople] = useState(initialState);\n  const [taxRate, setTaxRate] = useState(0.08875);\n  const [tipRate, setTipRate] = useState(.18);\n  useEffect(() => {\n    const updatedPeople = people.map(person => {\n      let oldTip = person['tip'];\n      let newTip = Math.round(100 * person['subtotal'] * tipRate) / 100;\n      person['tip'] = newTip;\n      person['total'] = Math.round(100 * (person['total'] - oldTip + newTip)) / 100;\n      return person;\n    });\n    setPeople(updatedPeople);\n  }, [tipRate]);\n\n  const addItemToPerson = (name, price, personId) => {\n    let currentPersonIndex = people.findIndex(person => person.id === personId);\n    let currentPerson = people.filter(person => person.id === personId);\n    currentPerson[0]['items'].push({\n      name: name,\n      price: parseFloat(parseInt(price)),\n      qty: 1\n    });\n    updateTotals(currentPerson[0], currentPersonIndex, price);\n  };\n\n  const incrementItemQuantity = (item, personId) => {\n    let currentPersonIndex = people.findIndex(person => person.id === personId);\n    let currentPerson = people.filter(person => person.id === personId);\n    let updateItem = currentPerson[0]['items'].findIndex(el => el.name === item);\n    currentPerson[0]['items'][updateItem]['qty'] += 1;\n    updateTotals(currentPerson[0], currentPersonIndex, currentPerson[0]['items'][updateItem]['price']);\n  };\n\n  const decrementItemQuantity = (item, personId) => {\n    let currentPersonIndex = people.findIndex(person => person.id === personId);\n    let currentPerson = people.filter(person => person.id === personId);\n    let updateItem = currentPerson[0]['items'].findIndex(el => el.name === item);\n    currentPerson[0]['items'][updateItem]['qty'] -= 1;\n    updateTotals(currentPerson[0], currentPersonIndex, currentPerson[0]['items'][updateItem]['price'], \"minus\");\n  };\n\n  const incrementTaxRate = () => {\n    setTipRate(prevState => prevState += 0.01); //  updateTotalsAfterTipChange()\n  };\n\n  const decrementTaxRate = () => {\n    setTipRate(prevState => prevState -= 0.01);\n  }; // const updateTotalsAfterTipChange = () => {\n  //     const updatedPeople = people.map(person => {\n  //         let oldTip = person['tip']\n  //         let newTip = Math.round(100*(person['subtotal']) * tipRate)/100\n  //         person['tip'] = newTip\n  //         person['total'] = person['total'] - oldTip + newTip\n  //         return person\n  //     })\n  //     setPeople(updatedPeople)\n  // }\n\n\n  const updateTotals = (person, personIndex, price, type = \"add\") => {\n    type === \"add\" ? person['subtotal'] += parseFloat(parseInt(price)) : person['subtotal'] -= parseFloat(parseInt(price));\n    person['tax'] = Math.round(100 * person['subtotal'] * taxRate) / 100;\n    person['tip'] = Math.round(100 * person['subtotal'] * tipRate) / 100;\n    person['total'] = Math.round(100 * (person['subtotal'] + person['tax'] + person['tip'])) / 100;\n    setPeople(prevState => {\n      let newState = [...prevState];\n      newState[personIndex] = person;\n      return newState;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./split_logo.png\",\n        alt: \"logo\",\n        style: {\n          width: '50%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SimpleTabs, {\n      people: people,\n      addItemToPerson: addItemToPerson,\n      incrementItemQuantity: incrementItemQuantity,\n      decrementItemQuantity: decrementItemQuantity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.centerActionItems,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Tip:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RemoveIcon, {\n        onClick: decrementTaxRate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), Math.round(tipRate * 100), \"%\", /*#__PURE__*/_jsxDEV(AddIcon, {\n        onClick: incrementTaxRate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GroupBill, \"2/bHpfOmMB7WJ1zvdcdZBlvSYb4=\");\n\n_c = GroupBill;\nexport default GroupBill;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupBill\");","map":{"version":3,"sources":["/Users/jvelis/code/jvelis94/bill-splitter/src/components/GroupBill.js"],"names":["useEffect","useState","PersonalBill","SimpleTabs","styles","AddIcon","RemoveIcon","initialState","id","name","items","subtotal","tax","tip","total","GroupBill","people","setPeople","taxRate","setTaxRate","tipRate","setTipRate","updatedPeople","map","person","oldTip","newTip","Math","round","addItemToPerson","price","personId","currentPersonIndex","findIndex","currentPerson","filter","push","parseFloat","parseInt","qty","updateTotals","incrementItemQuantity","item","updateItem","el","decrementItemQuantity","incrementTaxRate","prevState","decrementTaxRate","personIndex","type","newState","textAlign","width","centerActionItems"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\nimport PersonalBill from \"./PersonalBill\"\n// import styles from \"./GroupBill.module.css\"\nimport SimpleTabs from \"./Tabs\"\nimport styles from './IndividualItem.module.css'\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nconst initialState = [\n    {   \n        id: 1,\n        name: \"Joel\",\n        items: [],\n        subtotal: 0,\n        tax: 0,\n        tip: 0,\n        total: 0\n    },\n    {   \n        id: 2,\n        name: \"Nohely\",\n        items: [],\n        subtotal: 0,\n        tax: 0,\n        tip: 0,\n        total: 0,\n    }\n]\n\nconst GroupBill = () => {\n    const [people, setPeople] = useState(initialState)\n    const [taxRate, setTaxRate] = useState(0.08875)\n    const [tipRate, setTipRate] = useState(.18)\n\n    useEffect(() => {\n        const updatedPeople = people.map(person => {\n            let oldTip = person['tip']\n            let newTip = Math.round(100*(person['subtotal']) * tipRate)/100\n            person['tip'] = newTip\n            person['total'] = Math.round(100*(person['total'] - oldTip + newTip))/100\n            return person\n        })\n\n        setPeople(updatedPeople)\n\n    }, [tipRate])\n\n    const addItemToPerson = (name, price, personId) => {\n        let currentPersonIndex = people.findIndex(person => person.id === personId)\n        let currentPerson = people.filter(person => person.id === personId)\n        currentPerson[0]['items'].push({\n            name: name,\n            price: parseFloat(parseInt(price)),\n            qty: 1\n        })\n        updateTotals(currentPerson[0], currentPersonIndex, price)\n    }\n\n    const incrementItemQuantity = (item, personId) => {\n        let currentPersonIndex = people.findIndex(person => person.id === personId)\n        let currentPerson = people.filter(person => person.id === personId)\n        let updateItem = currentPerson[0]['items'].findIndex(el => el.name === item)\n        currentPerson[0]['items'][updateItem]['qty'] += 1\n        updateTotals(currentPerson[0], currentPersonIndex, currentPerson[0]['items'][updateItem]['price'])\n    }\n\n    const decrementItemQuantity = (item, personId) => {\n        let currentPersonIndex = people.findIndex(person => person.id === personId)\n        let currentPerson = people.filter(person => person.id === personId)\n        let updateItem = currentPerson[0]['items'].findIndex(el => el.name === item)\n        currentPerson[0]['items'][updateItem]['qty'] -= 1\n        updateTotals(currentPerson[0], currentPersonIndex, currentPerson[0]['items'][updateItem]['price'], \"minus\")\n     }\n\n\n     const incrementTaxRate = () => {\n         setTipRate(prevState => prevState += 0.01)\n        //  updateTotalsAfterTipChange()\n     }\n\n     const decrementTaxRate = () => {\n        setTipRate(prevState => prevState -= 0.01)\n    }\n\n    // const updateTotalsAfterTipChange = () => {\n    //     const updatedPeople = people.map(person => {\n    //         let oldTip = person['tip']\n    //         let newTip = Math.round(100*(person['subtotal']) * tipRate)/100\n    //         person['tip'] = newTip\n    //         person['total'] = person['total'] - oldTip + newTip\n    //         return person\n    //     })\n\n    //     setPeople(updatedPeople)\n    // }\n\n     const updateTotals = (person, personIndex, price, type=\"add\") => {\n        type ===\"add\" ? person['subtotal'] += parseFloat(parseInt(price)) : person['subtotal'] -= parseFloat(parseInt(price))\n        person['tax'] = Math.round(100*(person['subtotal']) * taxRate)/100\n        person['tip'] = Math.round(100*(person['subtotal']) * tipRate)/100\n        person['total'] = Math.round(100*(person['subtotal'] + person['tax'] + person['tip']))/100\n\n        setPeople(prevState => {\n            let newState = [...prevState]\n            newState[personIndex] = person\n            return newState\n        })\n     }\n     \n\n    return (\n        <>\n            <div style={{textAlign: 'center'}}>\n                <img src='./split_logo.png' alt='logo' style={{width: '50%'}}/>\n            </div>\n            <SimpleTabs \n                people={people} \n                addItemToPerson={addItemToPerson} \n                incrementItemQuantity={incrementItemQuantity}\n                decrementItemQuantity={decrementItemQuantity}\n            />\n            <div className={styles.centerActionItems}>\n                <h4>Tip:</h4>\n                <RemoveIcon onClick={decrementTaxRate} />\n                    {Math.round(tipRate*100)}%  \n                <AddIcon onClick={incrementTaxRate} />\n            </div>\n        </>\n    )\n}\n\nexport default GroupBill"]},"metadata":{},"sourceType":"module"}