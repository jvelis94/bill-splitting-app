{"ast":null,"code":"var _jsxFileName = \"/Users/jvelis/code/jvelis94/bill-splitter/src/components/GroupBill.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport PersonalBill from \"./PersonalBill\";\nimport styles from \"./GroupBill.module.css\";\nimport SimpleTabs from \"./Tabs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = [{\n  id: 1,\n  name: \"Joel\",\n  items: [],\n  subtotal: 0,\n  tax: 0,\n  tip: 0,\n  total: 0\n}, {\n  id: 2,\n  name: \"Nohely\",\n  items: [],\n  subtotal: 0,\n  tax: 0,\n  tip: 0,\n  total: 0\n}];\n\nconst GroupBill = () => {\n  _s();\n\n  const [people, setPeople] = useState(initialState);\n  const [taxRate, setTaxRate] = useState(0.08875);\n  const [tipRate, setTipRate] = useState(.18);\n  useEffect(() => {}, [people]);\n\n  const addItemToPerson = (name, price, personId) => {\n    let currentPersonIndex = people.findIndex(person => person.id === personId);\n    let currentPerson = people.filter(person => person.id === personId);\n    currentPerson[0]['items'].push({\n      name: name,\n      price: parseFloat(parseInt(price)),\n      qty: 1\n    });\n    updateTotals(currentPerson[0], currentPersonIndex, price);\n  };\n\n  const incrementItemQuantity = (item, personId) => {\n    let currentPersonIndex = people.findIndex(person => person.id === personId);\n    let currentPerson = people.filter(person => person.id === personId);\n    let updateItem = currentPerson[0]['items'].findIndex(el => el.name === item);\n    currentPerson[0]['items'][updateItem]['qty'] += 1;\n    setPeople(prevState => {\n      let newState = [...prevState];\n      newState[currentPersonIndex] = currentPerson[0];\n      return newState;\n    });\n  };\n\n  const decrementItemQuantity = () => {\n    console.log('updating item down');\n  };\n\n  const updateTotals = (person, personIndex, price) => {\n    console.log(person);\n    person['subtotal'] += parseFloat(parseInt(price));\n    person['tax'] = Math.round(100 * person['subtotal'] * taxRate) / 100;\n    person['tip'] = Math.round(100 * person['subtotal'] * tipRate) / 100;\n    person['total'] = Math.round(100 * (person['subtotal'] + person['tax'] + person['tip'])) / 100;\n    setPeople(prevState => {\n      let newState = [...prevState];\n      newState[personIndex] = person;\n      return newState;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"./split_logo.png\",\n        alt: \"logo\",\n        style: {\n          width: '50%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SimpleTabs, {\n      people: people,\n      addItemToPerson: addItemToPerson,\n      incrementItemQuantity: incrementItemQuantity,\n      decrementItemQuantity: decrementItemQuantity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GroupBill, \"2/bHpfOmMB7WJ1zvdcdZBlvSYb4=\");\n\n_c = GroupBill;\nexport default GroupBill;\n\nvar _c;\n\n$RefreshReg$(_c, \"GroupBill\");","map":{"version":3,"sources":["/Users/jvelis/code/jvelis94/bill-splitter/src/components/GroupBill.js"],"names":["useEffect","useState","PersonalBill","styles","SimpleTabs","initialState","id","name","items","subtotal","tax","tip","total","GroupBill","people","setPeople","taxRate","setTaxRate","tipRate","setTipRate","addItemToPerson","price","personId","currentPersonIndex","findIndex","person","currentPerson","filter","push","parseFloat","parseInt","qty","updateTotals","incrementItemQuantity","item","updateItem","el","prevState","newState","decrementItemQuantity","console","log","personIndex","Math","round","textAlign","width"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\nimport PersonalBill from \"./PersonalBill\"\nimport styles from \"./GroupBill.module.css\"\nimport SimpleTabs from \"./Tabs\"\n\nconst initialState = [\n    {   \n        id: 1,\n        name: \"Joel\",\n        items: [],\n        subtotal: 0,\n        tax: 0,\n        tip: 0,\n        total: 0\n    },\n    {   \n        id: 2,\n        name: \"Nohely\",\n        items: [],\n        subtotal: 0,\n        tax: 0,\n        tip: 0,\n        total: 0,\n    }\n]\n\nconst GroupBill = () => {\n    const [people, setPeople] = useState(initialState)\n    const [taxRate, setTaxRate] = useState(0.08875)\n    const [tipRate, setTipRate] = useState(.18)\n\n    useEffect(() => {\n\n\n    }, [people])\n\n    const addItemToPerson = (name, price, personId) => {\n        let currentPersonIndex = people.findIndex(person => person.id === personId)\n        let currentPerson = people.filter(person => person.id === personId)\n        currentPerson[0]['items'].push({\n            name: name,\n            price: parseFloat(parseInt(price)),\n            qty: 1\n        })\n        updateTotals(currentPerson[0], currentPersonIndex, price)\n    }\n\n    const incrementItemQuantity = (item, personId) => {\n        let currentPersonIndex = people.findIndex(person => person.id === personId)\n        let currentPerson = people.filter(person => person.id === personId)\n        let updateItem = currentPerson[0]['items'].findIndex(el => el.name === item)\n        currentPerson[0]['items'][updateItem]['qty'] += 1\n        setPeople(prevState => {\n            let newState = [...prevState]\n            newState[currentPersonIndex] = currentPerson[0]\n            return newState\n        })\n    }\n\n    const decrementItemQuantity = () => {\n        console.log('updating item down') \n     }\n\n\n     const updateTotals = (person, personIndex, price) => {\n        console.log(person)\n        person['subtotal'] += parseFloat(parseInt(price))\n        person['tax'] = Math.round(100*(person['subtotal']) * taxRate)/100\n        person['tip'] = Math.round(100*(person['subtotal']) * tipRate)/100\n        person['total'] = Math.round(100*(person['subtotal'] + person['tax'] + person['tip']))/100\n\n        setPeople(prevState => {\n            let newState = [...prevState]\n            newState[personIndex] = person\n            return newState\n        })\n     }\n\n    return (\n        <>\n            <div style={{textAlign: 'center'}}>\n                <img src='./split_logo.png' alt='logo' style={{width: '50%'}}/>\n            </div>\n            <SimpleTabs \n                people={people} \n                addItemToPerson={addItemToPerson} \n                incrementItemQuantity={incrementItemQuantity}\n                decrementItemQuantity={decrementItemQuantity}\n            />\n        </>\n    )\n}\n\nexport default GroupBill"]},"metadata":{},"sourceType":"module"}