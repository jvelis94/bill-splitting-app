[{"/Users/jvelis/code/jvelis94/bill-splitter/src/index.js":"1","/Users/jvelis/code/jvelis94/bill-splitter/src/App.js":"2","/Users/jvelis/code/jvelis94/bill-splitter/src/reportWebVitals.js":"3","/Users/jvelis/code/jvelis94/bill-splitter/src/components/IndividualItem.js":"4","/Users/jvelis/code/jvelis94/bill-splitter/src/components/GroupBill.js":"5","/Users/jvelis/code/jvelis94/bill-splitter/src/components/PersonalBill.js":"6","/Users/jvelis/code/jvelis94/bill-splitter/src/components/Tabs.js":"7","/Users/jvelis/code/jvelis94/bill-splitter/src/components/ItemForm.js":"8","/Users/jvelis/code/jvelis94/bill-splitter/src/components/Totals.js":"9","/Users/jvelis/code/jvelis94/bill-splitting-app/src/index.js":"10","/Users/jvelis/code/jvelis94/bill-splitting-app/src/App.js":"11","/Users/jvelis/code/jvelis94/bill-splitting-app/src/reportWebVitals.js":"12","/Users/jvelis/code/jvelis94/bill-splitting-app/src/components/GroupBill.js":"13","/Users/jvelis/code/jvelis94/bill-splitting-app/src/components/PersonalBill.js":"14","/Users/jvelis/code/jvelis94/bill-splitting-app/src/components/Tabs.js":"15","/Users/jvelis/code/jvelis94/bill-splitting-app/src/components/IndividualItem.js":"16","/Users/jvelis/code/jvelis94/bill-splitting-app/src/components/ItemForm.js":"17","/Users/jvelis/code/jvelis94/bill-splitting-app/src/components/Totals.js":"18","/Users/jvelis/code/jvelis94/bill-splitting-app/src/components/ShareBill.js":"19"},{"size":500,"mtime":1630109101095,"results":"20","hashOfConfig":"21"},{"size":142,"mtime":1630111149119,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1630109101096,"results":"23","hashOfConfig":"21"},{"size":1024,"mtime":1630333716321,"results":"24","hashOfConfig":"21"},{"size":5041,"mtime":1630368981266,"results":"25","hashOfConfig":"21"},{"size":1331,"mtime":1630333701265,"results":"26","hashOfConfig":"21"},{"size":2255,"mtime":1630332965095,"results":"27","hashOfConfig":"21"},{"size":857,"mtime":1630331504339,"results":"28","hashOfConfig":"21"},{"size":892,"mtime":1630333978445,"results":"29","hashOfConfig":"21"},{"size":500,"mtime":1630369456832,"results":"30","hashOfConfig":"31"},{"size":142,"mtime":1630369456830,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1630369456833,"results":"33","hashOfConfig":"31"},{"size":6692,"mtime":1630437286516,"results":"34","hashOfConfig":"31"},{"size":1663,"mtime":1630440674235,"results":"35","hashOfConfig":"31"},{"size":2421,"mtime":1630437286517,"results":"36","hashOfConfig":"31"},{"size":1247,"mtime":1630371082008,"results":"37","hashOfConfig":"31"},{"size":857,"mtime":1630369456831,"results":"38","hashOfConfig":"31"},{"size":1448,"mtime":1630437683822,"results":"39","hashOfConfig":"31"},{"size":989,"mtime":1630441287094,"results":"40","hashOfConfig":"31"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1upqk04",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},"vp3jxv",{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"63"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"63"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jvelis/code/jvelis94/bill-splitter/src/index.js",[],["83","84"],"/Users/jvelis/code/jvelis94/bill-splitter/src/App.js",[],"/Users/jvelis/code/jvelis94/bill-splitter/src/reportWebVitals.js",[],"/Users/jvelis/code/jvelis94/bill-splitter/src/components/IndividualItem.js",[],"/Users/jvelis/code/jvelis94/bill-splitter/src/components/GroupBill.js",["85","86","87","88"],"/Users/jvelis/code/jvelis94/bill-splitter/src/components/PersonalBill.js",[],"/Users/jvelis/code/jvelis94/bill-splitter/src/components/Tabs.js",[],"/Users/jvelis/code/jvelis94/bill-splitter/src/components/ItemForm.js",["89"],"import { useState, useRef } from 'react'\nimport styles from './ItemForm.module.css'\n\nconst ItemForm = (props) => {\n    const nameRef = useRef()\n    const priceRef = useRef()\n\n    const handleFormSubmit = (event) => {\n        event.preventDefault()\n        props.addItemToPerson(nameRef.current.value, priceRef.current.value, props.personId)\n        nameRef.current.value = \"\"\n        priceRef.current.value = \"\"\n    }\n\n    return (\n        <form className={styles.formContainer} onSubmit={handleFormSubmit}>\n            <input type=\"text\" name=\"name\" placeholder=\"burger\" className={styles.formInputs} ref={nameRef} />    \n            <input type=\"text\" name=\"price\" placeholder=\"20\" className={styles.formInputs} ref={priceRef} />\n            <input type=\"submit\" value=\"Add\" className={styles.formSubmit}/>\n        </form>\n    )\n}\n\nexport default ItemForm","/Users/jvelis/code/jvelis94/bill-splitter/src/components/Totals.js",[],"/Users/jvelis/code/jvelis94/bill-splitting-app/src/index.js",[],["90","91"],"/Users/jvelis/code/jvelis94/bill-splitting-app/src/App.js",[],"/Users/jvelis/code/jvelis94/bill-splitting-app/src/reportWebVitals.js",[],"/Users/jvelis/code/jvelis94/bill-splitting-app/src/components/GroupBill.js",["92","93","94"],"import { useEffect, useState, useRef } from \"react\"\nimport PersonalBill from \"./PersonalBill\"\nimport styles from \"./GroupBill.module.css\"\nimport SimpleTabs from \"./Tabs\"\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport TextField from '@material-ui/core/TextField';\n\nconst initialState = []\n\nconst GroupBill = () => {\n    const [people, setPeople] = useState(initialState)\n    const [taxRate, setTaxRate] = useState(0.08875)\n    const [tipRate, setTipRate] = useState(.18)\n    const [currentId, setCurrentId] = useState(1)\n    const newPersonRef = useRef()\n    const [addPersonPlaceholder, setAddPersonPlaceholder] = useState(\"add new person\")\n\n    useEffect(() => {\n        const updatedPeople = people.map(person => {\n            let oldTip = person['tip']\n            let newTip = Math.round(100*(person['subtotal']) * tipRate)/100\n            person['tip'] = newTip\n            person['total'] = Math.round(100*(person['total'] - oldTip + newTip))/100\n            return person\n        })\n\n        setPeople(updatedPeople)\n\n    }, [tipRate])\n\n    const addItemToPerson = (name, price, personId) => {\n        console.log(`adding ${name} to person`)\n        let currentPersonIndex = people.findIndex(person => person.id === personId)\n        let currentPerson = people.filter(person => person.id === personId)\n        console.log(currentPerson)\n        currentPerson[0]['items'].push({\n            name: name,\n            price: parseFloat(parseInt(price)),\n            qty: 1\n        })\n        updateTotals(currentPerson[0], currentPersonIndex, price)\n    }\n\n    const incrementItemQuantity = (item, personId) => {\n        let currentPersonIndex = people.findIndex(person => person.id === personId)\n        let currentPerson = people.filter(person => person.id === personId)\n        let updateItem = currentPerson[0]['items'].findIndex(el => el.name === item)\n        currentPerson[0]['items'][updateItem]['qty'] += 1\n        updateTotals(currentPerson[0], currentPersonIndex, currentPerson[0]['items'][updateItem]['price'])\n    }\n\n    const decrementItemQuantity = (item, personId) => {\n        let currentPersonIndex = people.findIndex(person => person.id === personId)\n        let currentPerson = people.filter(person => person.id === personId)\n        let updateItem = currentPerson[0]['items'].findIndex(el => el.name === item)\n\n        if (currentPerson[0]['items'][updateItem]['qty'] > 1) {\n            currentPerson[0]['items'][updateItem]['qty'] -= 1\n            updateTotals(currentPerson[0], currentPersonIndex, currentPerson[0]['items'][updateItem]['price'], \"minus\")\n        }\n    }\n\n    const removeItemFromPerson = (item, personId) => {\n        console.log('removing item')\n        let currentPersonIndex = people.findIndex(person => person.id === personId)\n        let currentPerson = people.filter(person => person.id === personId)\n        let removeItem = currentPerson[0]['items'].findIndex(el => el.name === item)\n        const removeItemTotal = (currentPerson[0]['items'][removeItem]['price']) * (currentPerson[0]['items'][removeItem]['qty'])\n        currentPerson[0]['items'][removeItem]['qty'] = 0\n        currentPerson[0]['items'].splice(removeItem, 1);\n        updateTotals(currentPerson[0], currentPersonIndex, removeItemTotal, \"minus\")\n    }\n\n\n    const incrementTipRate = () => {\n        setTipRate(prevState => prevState += 0.01)\n    }\n\n    const decrementTipRate = () => {\n        setTipRate(prevState => prevState -= 0.01)\n    }\n\n    const updateTotals = (person, personIndex, price, type=\"add\") => {\n        type ===\"add\" ? person['subtotal'] += parseFloat(parseInt(price)) : person['subtotal'] -= parseFloat(parseInt(price))\n        person['tax'] = Math.round(100*(person['subtotal']) * taxRate)/100\n        person['tip'] = Math.round(100*(person['subtotal']) * tipRate)/100\n        person['total'] = Math.round(100*(person['subtotal'] + person['tax'] + person['tip']))/100\n\n        setPeople(prevState => {\n            let newState = [...prevState]\n            newState[personIndex] = person\n            return newState\n        })\n    }\n\n    const handleNewPersonSubmit = (event) => {\n        event.preventDefault()\n        let newPerson = {\n            id: currentId,\n            name: newPersonRef.current.value,\n            items: [],\n            subtotal: 0,\n            tax: 0,\n            tip: 0,\n            total: 0\n        }\n        setPeople(prevState => [...prevState, newPerson])\n        setCurrentId(prevState => prevState +=1)\n        newPersonRef.current.value = \"\"\n        setAddPersonPlaceholder(\"add another person\")\n    }\n\n    const eliminateTax = () => {\n        // console.log('eliminating tax')\n        setTaxRate(0)\n        let newPeople = people.map(person => {\n            person['tax'] = 0\n            person['total'] = Math.round(100*(person['subtotal'] + person['tax'] + person['tip']))/100\n            return person\n        })\n        setPeople([...newPeople])\n    }\n\n    const addTax = () => {\n        // console.log('eliminating tax')\n        setTaxRate(0.08875)\n        let newPeople = people.map(person => {\n            person['tax'] = person['subtotal'] * 0.08875\n            person['total'] = Math.round(100*(person['subtotal'] + person['tax'] + person['tip']))/100\n            return person\n        })\n        setPeople([...newPeople])\n    }\n\n    let tabsUi = (\n        <SimpleTabs \n            people={people} \n            addItemToPerson={addItemToPerson} \n            incrementItemQuantity={incrementItemQuantity}\n            decrementItemQuantity={decrementItemQuantity}\n            removeItemFromPerson={removeItemFromPerson}\n            eliminateTax={eliminateTax}\n            addTax={addTax}\n        />\n    )\n\n    let tipUi = (\n        <div className={styles.centerActionItems}>\n            <h4>Tip:</h4>\n            <RemoveIcon onClick={decrementTipRate} />\n                {Math.round(tipRate*100)}%  \n            <AddIcon onClick={incrementTipRate} />\n        </div>\n    )\n\n    return (\n        <>\n            <div style={{textAlign: 'center'}}>\n                <img src='./split_logo.png' alt='logo' style={{width: '50%'}}/>\n            </div>\n            <div className={styles.newPersonContainer}>\n                <form onSubmit={handleNewPersonSubmit} >\n                    <input type=\"text\" name=\"name\" placeholder={addPersonPlaceholder} className={styles.formInputs} ref={newPersonRef} />\n                    <input type=\"submit\" value=\"Add\" className={styles.formSubmit}/>\n                </form>\n            </div>\n\n            {people.length > 0 && tabsUi}\n            {people.length > 0 && tipUi}\n        </>\n    )\n}\n\nexport default GroupBill","/Users/jvelis/code/jvelis94/bill-splitting-app/src/components/PersonalBill.js",[],"/Users/jvelis/code/jvelis94/bill-splitting-app/src/components/Tabs.js",[],"/Users/jvelis/code/jvelis94/bill-splitting-app/src/components/IndividualItem.js",[],"/Users/jvelis/code/jvelis94/bill-splitting-app/src/components/ItemForm.js",["95"],"/Users/jvelis/code/jvelis94/bill-splitting-app/src/components/Totals.js",[],"/Users/jvelis/code/jvelis94/bill-splitting-app/src/components/ShareBill.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":20},{"ruleId":"100","severity":1,"message":"104","line":7,"column":8,"nodeType":"102","messageId":"103","endLine":7,"endColumn":17},{"ruleId":"100","severity":1,"message":"105","line":13,"column":21,"nodeType":"102","messageId":"103","endLine":13,"endColumn":31},{"ruleId":"106","severity":1,"message":"107","line":30,"column":8,"nodeType":"108","endLine":30,"endColumn":17,"suggestions":"109"},{"ruleId":"100","severity":1,"message":"110","line":1,"column":10,"nodeType":"102","messageId":"103","endLine":1,"endColumn":18},{"ruleId":"96","replacedBy":"111"},{"ruleId":"98","replacedBy":"112"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":8,"nodeType":"102","messageId":"103","endLine":2,"endColumn":20},{"ruleId":"100","severity":1,"message":"104","line":7,"column":8,"nodeType":"102","messageId":"103","endLine":7,"endColumn":17},{"ruleId":"106","severity":1,"message":"107","line":30,"column":8,"nodeType":"108","endLine":30,"endColumn":17,"suggestions":"113"},{"ruleId":"100","severity":1,"message":"110","line":1,"column":10,"nodeType":"102","messageId":"103","endLine":1,"endColumn":18},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'PersonalBill' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'setTaxRate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'people'. Either include it or remove the dependency array.","ArrayExpression",["116"],"'useState' is defined but never used.",["114"],["115"],["117"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"118","fix":"120"},"Update the dependencies array to be: [people, tipRate]",{"range":"121","text":"122"},{"range":"123","text":"122"},[1090,1099],"[people, tipRate]",[1090,1099]]